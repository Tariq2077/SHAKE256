`timescale 1ns / 1ps

module truncate_tb;

    parameter WIDTH_IN = 1088;
    parameter MAX_L = 256;

    reg [WIDTH_IN-1:0] Z;
    reg [$clog2(MAX_L)-1:0] L_sel;
    wire [MAX_L-1:0] Y;

    integer i, j;
    integer passed;

    // Instantiate the Truncate module
    Truncate #(
        .WIDTH_IN(WIDTH_IN),
        .MAX_L(MAX_L)
    ) uut (
        .Z(Z),
        .L_sel(L_sel),
        .Y(Y)
    );

    initial begin
        L_sel = 8; 
        // Correct replication and concatenation syntax
        Z = { {(WIDTH_IN-16){1'b0}}, 16'b1001100110011001 };

        #10;

        $display("Truncated Output Y:");
        $display("%b", Y);

        passed = 1;
        for (j = 0; j < MAX_L; j = j + 1) begin
            if (j < L_sel) begin
                // Check if Y[j] matches Z[j]
                if (Y[j] !== Z[j])
                    passed = 0;
            end else begin
                // Above L_sel, Y should be zero
                if (Y[j] !== 1'b0)
                    passed = 0;
            end
        end

        if (passed)
            $display("Test Passed: Y is correct.");
        else
            $display("Test Failed: Y is incorrect.");

        #10;
        $finish;
    end

endmodule
